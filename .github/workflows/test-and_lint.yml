# This workflow is triggered on pushes and pull requests to the main and develop branches.
# It installs dependencies, runs Ruff for code formatting checks, and executes tests using Pytest.
# The workflow uses the latest version of Python 3.11 and caches pip dependencies for faster builds.
name: Test and Lint

# This workflow is triggered on pushes and pull requests to the main and develop branches.
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    name: Run Tests and Linting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install uv (Package Manager)
        run: pip install uv

      # Install pytest explicitly
      - name: Install Pytest
        run: pip install pytest

      - name: Create and activate Virtual Environment
        run: uv venv && source .venv/bin/activate

      - name: Install Dependencies
        run: uv sync
      
      # Check current directory and lists all files (including hidden ones) to confirm at the root of the project
      - name: Check Current Directory
        run: pwd && ls -la

      # Shows the Python path and version to ensure using the correct environment
      - name: Check Python Executable
        run: which python && python --version

      - name: Force Install `paho-mqtt`
        run: pip install -r requirements.txt

      - name: Create .env File at the root of the project
        run: |
          echo "RPI_AWS_IOT_ENDPOINT=test" >> .env
          echo "RPI_AWS_IOT_CERTIFICATE=test" >> .env
          echo "RPI_AWS_IOT_PRIVATE_KEY=test" >> .env
          echo "RPI_AWS_IOT_ROOT_CA=test" >> .env
      
      - name: Verify .env File Exists
        run: cat .env

      #TODO: Uncomment the following lines to enable Ruff for code formatting checks
      - name: Force Install `ruff`
        run: pip install ruff

      - name: Run Ruff Formatting Check
        run: uv add ruff && ruff check .

      - name: Run Tests with Pytest
        env:
          ENV_FILE_PATH: ".env"  # Ensure tests use the correct .env file
        run: pytest ./raspberry_pi/tests/ -v --maxfail=5 --disable-warnings
