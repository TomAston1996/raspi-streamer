AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-rpi-iot-pipeline

  Simple SAM template for deploying a Lambda function that collects Raspberry Pi CPU metrics.

# https://stackoverflow.com/questions/66579433/how-to-add-environment-variables-in-template-yaml-in-a-secured-way 
Parameters:
  DatabaseTableName:
    Type: String
    Description: Name of the DynamoDB table for storing Raspberry Pi CPU metrics
    Default: RpiCpuMetrics
    NoEcho: true

Resources:
  # DynamoDB Table for storing Raspberry Pi CPU metrics
  RpiCpuMetricsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref DatabaseTableName
      AttributeDefinitions:
        - AttributeName: id  # Partition Key
          AttributeType: S
        - AttributeName: timestamp  # GSI Sort Key
          AttributeType: N
        - AttributeName: cpu_usage  # GSI Partition Key
          AttributeType: N
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST  # On-demand billing mode
      GlobalSecondaryIndexes:
        - IndexName: TimestampCpuUsageIndex
          KeySchema:
            - AttributeName: cpu_usage
              KeyType: HASH
            - AttributeName: timestamp
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

   # SNS Topic
  RpiCpuMetricsTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: RpiCpuMetricsTopic

  # SQS Queue
  RpiCpuMetricsQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: RpiCpuMetricsQueue

  # SNS Subscription to SQS
  RpiCpuMetricsSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !Ref RpiCpuMetricsTopic
      Protocol: sqs
      Endpoint: !GetAtt RpiCpuMetricsQueue.Arn

  # Policy to Allow SNS to Send Messages to SQS
  RpiCpuMetricsQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref RpiCpuMetricsQueue
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: "*"
            Action: SQS:SendMessage
            Resource: !GetAtt RpiCpuMetricsQueue.Arn
            Condition:
              ArnEquals:
                aws:SourceArn: !Ref RpiCpuMetricsTopic
  
  # Lambda Function for collecting Raspberry Pi CPU metrics and storing them in DynamoDB
  RpiCpuMetricsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: rpi_cpu_metrics/handler.handler
      Runtime: python3.11
      Architectures:
      - x86_64
      Environment:
        Variables:
          DB_TABLE_NAME: !Ref RpiCpuMetricsTable
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBCrudPolicy:  # Grants CRUD permissions to the Lambda function on the table
            TableName: !Ref RpiCpuMetricsTable
        - SQSPollerPolicy:
            QueueName: !GetAtt RpiCpuMetricsQueue.QueueName
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt RpiCpuMetricsQueue.Arn
            BatchSize: 10
            Enabled: true
          
